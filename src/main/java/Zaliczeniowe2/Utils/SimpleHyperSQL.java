package Zaliczeniowe2.Utils;

import Zaliczeniowe2.domain.User;

import java.security.interfaces.RSAKey;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.faces.flow.builder.ReturnBuilder;

public class SimpleHyperSQL {
    private static Connection connect(){
        String url="jdbc:hsqldb:hsql://localhost/workdb";
        Connection connection = null;
        try {
        	Class.forName("org.hsqldb.jdbcDriver");
            connection = DriverManager.getConnection(url);
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
        return connection;
    }

    private static void initializeDatabase(Connection connection){
    	if(connection == null)
    		connection = connect();
    	try {
			if(connection.getMetaData().getTables(null, null, "USERS", null).next()) return;
		} catch (SQLException e1) {
			e1.printStackTrace();
		}
        String createTableSql =
                "CREATE TABLE users("
                        + "id int GENERATED BY DEFAULT AS IDENTITY,"
                        + "login VARCHAR(200),"
                        + "password VARCHAR(200),"
                        + "email VARCHAR(200),"
                        + "permissionLevel INT"
                        + ")";
        Statement createTable = null;
        try {
            createTable = connection.createStatement();
            createTable.executeUpdate(createTableSql);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        String AddUserSql =
                "INSERT INTO users(login,email,password,permissionLevel) VALUES (?,?,?,?)";
//        "CREATE TABLE users("
//        + "id int GENERATED BY DEFAULT AS IDENTITY,"
//        + "login VARCHAR(200),"
//        + "password VARCHAR(200),"
//        + "email VARCHAR(200),"
//        + "permissionlevel INT"
//        + ")";
        User u = new User("admin",StringUtils.makeSHA256("admin"),"admin@admin");
        u.setPermissionLevel(3);
        
        PreparedStatement AddUser;
		try {
			AddUser = connection.prepareStatement(AddUserSql);
			AddUser.setString(1, u.getLogin());
			AddUser.setString(2, u.getEmail());
			AddUser.setString(3, u.getPassword());
			AddUser.setInt(4, u.getPermissionLevel());
						
        	AddUser.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static List<User> getUsers(){
    	Connection connection = connect();
        initializeDatabase(connection);
        
        String selectTableSql =
                "SELECT * FROM users;";
        Statement selectTable = null;
        List<User> lista = new ArrayList<>();
        
        ResultSet rs = null;
        try {
        	selectTable = connection.createStatement();
        	rs = selectTable.executeQuery(selectTableSql);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        String login,email,passw;
		Integer permissions;
        
        try {
			while(rs.next()){
				login = rs.getString("login");
				email = rs.getString("email");
				passw = rs.getString("password");
				permissions = rs.getInt("permissionlevel");
				User u = new User(login,passw,email);
				u.setPermissionLevel(permissions);
				lista.add(u);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        return lista;
    }
    
    public static void AddUser(User u){
    	Connection connection = connect();
        initializeDatabase(connection);
        
        String AddUserSql =
                "INSERT INTO users(login,email,password,permissionLevel) VALUES (?,?,?,?)";
//        "CREATE TABLE users("
//        + "id int GENERATED BY DEFAULT AS IDENTITY,"
//        + "login VARCHAR(200),"
//        + "password VARCHAR(200),"
//        + "email VARCHAR(200),"
//        + "permissionlevel INT"
//        + ")";
        
        PreparedStatement AddUser;
		try {
			AddUser = connection.prepareStatement(AddUserSql);
			AddUser.setString(1, u.getLogin());
			AddUser.setString(2, u.getEmail());
			AddUser.setString(3, u.getPassword());
			AddUser.setInt(4, u.getPermissionLevel());
						
        	AddUser.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public static User TryLogin(String login,String passw){
    	List<User> list = getUsers();
    	for(User u : list){
    		if(u.getLogin().equals(login) && u.getPassword().equals(StringUtils.makeSHA256(passw))){
    			return u;
    		}
    	}
    	return null;
    }
}
